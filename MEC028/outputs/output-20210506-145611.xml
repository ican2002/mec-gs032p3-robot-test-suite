<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.5 on win32)" generated="20210506 14:56:11.585" rpa="false" schemaversion="2">
<suite id="s1" name="WaiSubscription" source="C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\WaiSubscription.robot">
<test id="s1-t1" name="TP_MEC_MEC028_SRV_WAI_007_OK">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:11.970" endtime="20210506 14:56:11.970"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:11.970" endtime="20210506 14:56:11.971"/>
</kw>
<kw name="Send a request for creating a subscription">
<arg>AssocStaSubscription.json</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating a new subscription</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:11.971" level="INFO">Creating a new subscription</msg>
<status status="PASS" starttime="20210506 14:56:11.971" endtime="20210506 14:56:11.971"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:11.971" endtime="20210506 14:56:11.972"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:11.972" endtime="20210506 14:56:11.972"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>jsons/</arg>
<arg>${content}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:11.972" level="INFO">${path} = jsons/AssocStaSubscription.json</msg>
<status status="PASS" starttime="20210506 14:56:11.972" endtime="20210506 14:56:11.972"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210506 14:56:11.972" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription.json"&gt;C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription.json&lt;/a&gt;'.</msg>
<msg timestamp="20210506 14:56:11.973" level="INFO">${body} = {
	"apId": {
		"macId": "macId01"
	},
	"callbackReference": "http://callback.uri/1",
	"subscriptionType": "AssocStaSubscription"
}</msg>
<status status="PASS" starttime="20210506 14:56:11.972" endtime="20210506 14:56:11.973"/>
</kw>
<kw name="POST" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions</arg>
<arg>${body}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20210506 14:56:11.973" endtime="20210506 14:56:12.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.061" level="INFO">{
	"apId": {
		"macId": "macId01"
	},
	"callbackReference": "http://callback.uri/1",
	"subscriptionType": "AssocStaSubscription"
}</msg>
<status status="PASS" starttime="20210506 14:56:12.061" endtime="20210506 14:56:12.062"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.062" level="INFO">
{
    "seconds": 0.015031000000000001,
    "status": 201,
    "body": {
        "_links": {
            "self": {
                "href": "/wai/v1/subscriptions/1"
            }
        },
        "apId": {
            "macId": "macId01"
        },
        "callbackReference": "http://callback.uri/1",
        "subscriptionType": "AssocStaSubscription"
    },
    "headers": {
        "Content-Type": "application/json; charset=utf-8",
        "Location": "/wai/v1/subscriptions/1",
        "Content-Length": "222",
        "Date": "Thu, 06 May 2021 12:56:11 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.072" level="INFO">${output} = {'seconds': 0.015031000000000001, 'status': 201, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'apId': {'macId': 'macId01'}, 'callbackReference': 'http://callback.uri/1', 'subscrip...</msg>
<status status="PASS" starttime="20210506 14:56:12.062" endtime="20210506 14:56:12.072"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.072" level="INFO">${response} = {'seconds': 0.015031000000000001, 'status': 201, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'apId': {'macId': 'macId01'}, 'callbackReference': 'http://callback.uri/1', 'subscrip...</msg>
<status status="PASS" starttime="20210506 14:56:12.072" endtime="20210506 14:56:12.072"/>
</kw>
<status status="PASS" starttime="20210506 14:56:11.971" endtime="20210506 14:56:12.072"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>201</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.073" level="INFO">${status} = 201</msg>
<status status="PASS" starttime="20210506 14:56:12.073" endtime="20210506 14:56:12.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.073" endtime="20210506 14:56:12.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.074" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.074" endtime="20210506 14:56:12.074"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.072" endtime="20210506 14:56:12.074"/>
</kw>
<kw name="Check HTTP Response Body Json Schema Is" library="GenericKeywords">
<arg>AssocStaSubscription</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response['headers']['Content-Type']}</arg>
<arg>application/json</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210506 14:56:12.074" endtime="20210506 14:56:12.075"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${schema}</var>
<arg>SEPARATOR=</arg>
<arg>${input}</arg>
<arg>.schema.json</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:12.075" level="INFO">${schema} = AssocStaSubscription.schema.json</msg>
<status status="PASS" starttime="20210506 14:56:12.075" endtime="20210506 14:56:12.075"/>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${schema}</arg>
<arg>${response['body']}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20210506 14:56:12.075" endtime="20210506 14:56:12.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Json Schema Validation OK</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.077" level="INFO">Json Schema Validation OK</msg>
<status status="PASS" starttime="20210506 14:56:12.077" endtime="20210506 14:56:12.077"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.074" endtime="20210506 14:56:12.077"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response['body']['subscriptionType']}</arg>
<arg>${SUB_TYPE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210506 14:56:12.077" endtime="20210506 14:56:12.078"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response['body']['_links']['self']['href']}</arg>
<arg>${HREF}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210506 14:56:12.078" endtime="20210506 14:56:12.079"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response['headers']['Location']}</arg>
<arg>${HREF}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210506 14:56:12.079" endtime="20210506 14:56:12.079"/>
</kw>
<doc>Check that the IUT responds with a Notification Subscription
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.4
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:11.969" endtime="20210506 14:56:12.080"/>
</test>
<test id="s1-t2" name="TP_MEC_MEC028_SRV_WAI_007_BR">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.080" endtime="20210506 14:56:12.081"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.081" endtime="20210506 14:56:12.081"/>
</kw>
<kw name="Send a request for creating a subscription">
<arg>AssocStaSubscription_BR.json</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating a new subscription</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.081" level="INFO">Creating a new subscription</msg>
<status status="PASS" starttime="20210506 14:56:12.081" endtime="20210506 14:56:12.082"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.082" endtime="20210506 14:56:12.082"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.082" endtime="20210506 14:56:12.082"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>jsons/</arg>
<arg>${content}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:12.082" level="INFO">${path} = jsons/AssocStaSubscription_BR.json</msg>
<status status="PASS" starttime="20210506 14:56:12.082" endtime="20210506 14:56:12.083"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210506 14:56:12.083" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription_BR.json"&gt;C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription_BR.json&lt;/a&gt;'.</msg>
<msg timestamp="20210506 14:56:12.083" level="INFO">${body} = {
  "_links":{
  	"href":""
  	},
      
	"apId": {
		"macId": "macId01"
	},
	"callbackReference": "http://callback.uri/1",
	"subscriptionType": "INVALID_VALUE"
}</msg>
<status status="PASS" starttime="20210506 14:56:12.083" endtime="20210506 14:56:12.083"/>
</kw>
<kw name="POST" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions</arg>
<arg>${body}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<status status="PASS" starttime="20210506 14:56:12.083" endtime="20210506 14:56:12.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.093" level="INFO">{
  "_links":{
  	"href":""
  	},
      
	"apId": {
		"macId": "macId01"
	},
	"callbackReference": "http://callback.uri/1",
	"subscriptionType": "INVALID_VALUE"
}</msg>
<status status="PASS" starttime="20210506 14:56:12.092" endtime="20210506 14:56:12.093"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.093" level="INFO">
{
    "seconds": 0.00544,
    "status": 400,
    "body": "",
    "headers": {
        "Content-Type": "application/problem+json; charset=utf-8",
        "Content-Length": "0",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.093" level="INFO">${output} = {'seconds': 0.00544, 'status': 400, 'body': '', 'headers': {'Content-Type': 'application/problem+json; charset=utf-8', 'Content-Length': '0', 'Date': 'Thu, 06 May 2021 12:56:12 GMT', 'Connection': 'ke...</msg>
<status status="PASS" starttime="20210506 14:56:12.093" endtime="20210506 14:56:12.093"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.094" level="INFO">${response} = {'seconds': 0.00544, 'status': 400, 'body': '', 'headers': {'Content-Type': 'application/problem+json; charset=utf-8', 'Content-Length': '0', 'Date': 'Thu, 06 May 2021 12:56:12 GMT', 'Connection': 'ke...</msg>
<status status="PASS" starttime="20210506 14:56:12.093" endtime="20210506 14:56:12.094"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.081" endtime="20210506 14:56:12.094"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>400</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.095" level="INFO">${status} = 400</msg>
<status status="PASS" starttime="20210506 14:56:12.094" endtime="20210506 14:56:12.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.095" endtime="20210506 14:56:12.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.096" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.096" endtime="20210506 14:56:12.096"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.094" endtime="20210506 14:56:12.096"/>
</kw>
<doc>Check that the IUT responds with an error when an invalid Subscription request is sent
ETSI GS MEC 028 2.1.1, clause 7.5.3.4
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:12.080" endtime="20210506 14:56:12.096"/>
</test>
<test id="s1-t3" name="TP_MEC_MEC028_SRV_WAI_007_NF">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.097" endtime="20210506 14:56:12.097"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.097" endtime="20210506 14:56:12.098"/>
</kw>
<kw name="Send a request for creating a subscription using wrong endpoint">
<arg>AssocStaSubscription.json</arg>
<kw name="Log" library="BuiltIn">
<arg>Creating a new subscription</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.098" level="INFO">Creating a new subscription</msg>
<status status="PASS" starttime="20210506 14:56:12.098" endtime="20210506 14:56:12.098"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.098" endtime="20210506 14:56:12.099"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.099" endtime="20210506 14:56:12.099"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>jsons/</arg>
<arg>${content}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:12.100" level="INFO">${path} = jsons/AssocStaSubscription.json</msg>
<status status="PASS" starttime="20210506 14:56:12.099" endtime="20210506 14:56:12.100"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210506 14:56:12.100" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription.json"&gt;C:\Users\pietr\Desktop\gs032p3-robot-test-suite\MEC028\WAI\SUB\jsons\AssocStaSubscription.json&lt;/a&gt;'.</msg>
<msg timestamp="20210506 14:56:12.100" level="INFO">${body} = {
	"apId": {
		"macId": "macId01"
	},
	"callbackReference": "http://callback.uri/1",
	"subscriptionType": "AssocStaSubscription"
}</msg>
<status status="PASS" starttime="20210506 14:56:12.100" endtime="20210506 14:56:12.100"/>
</kw>
<kw name="POST" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions_INVALID_URI</arg>
<arg>${body}</arg>
<tag>http</tag>
<doc>*Sends a POST request to the endpoint.*</doc>
<msg timestamp="20210506 14:56:12.106" level="WARN">Response body content is not JSON. Content-Type is: text/html; charset=utf-8</msg>
<status status="PASS" starttime="20210506 14:56:12.100" endtime="20210506 14:56:12.107"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.107" level="INFO">
{
    "seconds": 0.0037170000000000003,
    "status": 404,
    "body": "&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot POST /wai/v1/subscriptions_INVALID_URI&lt;/pre&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n",
    "headers": {
        "Content-Security-Policy": "default-src 'none'",
        "X-Content-Type-Options": "nosniff",
        "Content-Type": "text/html; charset=utf-8",
        "Content-Length": "172",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.108" level="INFO">${output} = {'seconds': 0.0037170000000000003, 'status': 404, 'body': '&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;meta charset="utf-8"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot POST /wai/v1/subscripti...</msg>
<status status="PASS" starttime="20210506 14:56:12.107" endtime="20210506 14:56:12.108"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.108" level="INFO">${response} = {'seconds': 0.0037170000000000003, 'status': 404, 'body': '&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;meta charset="utf-8"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot POST /wai/v1/subscripti...</msg>
<status status="PASS" starttime="20210506 14:56:12.108" endtime="20210506 14:56:12.108"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.098" endtime="20210506 14:56:12.108"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>404</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.109" level="INFO">${status} = 404</msg>
<status status="PASS" starttime="20210506 14:56:12.108" endtime="20210506 14:56:12.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.109" endtime="20210506 14:56:12.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.110" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.110" endtime="20210506 14:56:12.110"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.108" endtime="20210506 14:56:12.110"/>
</kw>
<doc>Check that the IUT responds with an error when a request with not existing parameters is sent
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.1</doc>
<status status="PASS" starttime="20210506 14:56:12.097" endtime="20210506 14:56:12.110"/>
</test>
<test id="s1-t4" name="TP_MEC_MEC028_SRV_WAI_005_OK">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.111" endtime="20210506 14:56:12.111"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.111" endtime="20210506 14:56:12.112"/>
</kw>
<kw name="Retrieve the subscription information">
<arg>${SUB_FILTER}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.112" endtime="20210506 14:56:12.113"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.113" endtime="20210506 14:56:12.113"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.113" endtime="20210506 14:56:12.114"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.114" endtime="20210506 14:56:12.114"/>
</kw>
<kw name="GET" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions?subscription_type=${subscription_type}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20210506 14:56:12.114" endtime="20210506 14:56:12.121"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.122" level="INFO">
{
    "seconds": 0.004779,
    "status": 200,
    "body": {
        "_links": {
            "self": {
                "href": "/wai/v1/subscriptions/1"
            }
        },
        "staDataRateSubscription": [],
        "assocStaSubscription": [
            {
                "subscriptionType": "AssocStaSubscription",
                "callbackReference": "http://callback/uri",
                "apId": {
                    "macId": "macId01"
                },
                "_links": {
                    "self": {
                        "href": "/wai/v1/subscriptions/1"
                    }
                }
            }
        ]
    },
    "headers": {
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "361",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.122" level="INFO">${output} = {'seconds': 0.004779, 'status': 200, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'staDataRateSubscription': [], 'assocStaSubscription': [{'subscriptionType': 'AssocStaSubscriptio...</msg>
<status status="PASS" starttime="20210506 14:56:12.121" endtime="20210506 14:56:12.122"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.123" level="INFO">${response} = {'seconds': 0.004779, 'status': 200, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'staDataRateSubscription': [], 'assocStaSubscription': [{'subscriptionType': 'AssocStaSubscriptio...</msg>
<status status="PASS" starttime="20210506 14:56:12.123" endtime="20210506 14:56:12.123"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.112" endtime="20210506 14:56:12.123"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>200</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.124" level="INFO">${status} = 200</msg>
<status status="PASS" starttime="20210506 14:56:12.123" endtime="20210506 14:56:12.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.124" endtime="20210506 14:56:12.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.125" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.125" endtime="20210506 14:56:12.125"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.123" endtime="20210506 14:56:12.126"/>
</kw>
<kw name="Check HTTP Response Body Json Schema Is" library="GenericKeywords">
<arg>SubscriptionLinkList</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response['headers']['Content-Type']}</arg>
<arg>application/json</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210506 14:56:12.126" endtime="20210506 14:56:12.127"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${schema}</var>
<arg>SEPARATOR=</arg>
<arg>${input}</arg>
<arg>.schema.json</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:12.128" level="INFO">${schema} = SubscriptionLinkList.schema.json</msg>
<status status="PASS" starttime="20210506 14:56:12.127" endtime="20210506 14:56:12.128"/>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${schema}</arg>
<arg>${response['body']}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20210506 14:56:12.128" endtime="20210506 14:56:12.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Json Schema Validation OK</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.132" level="INFO">Json Schema Validation OK</msg>
<status status="PASS" starttime="20210506 14:56:12.132" endtime="20210506 14:56:12.132"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.126" endtime="20210506 14:56:12.132"/>
</kw>
<for flavor="IN">
<var>${assocStaSub}</var>
<value>@{response['body']['assocStaSubscription']}</value>
<iter>
<var name="${assocStaSub}">{'subscriptionType': 'AssocStaSubscription', 'callbackReference': 'http://callback/uri', 'apId': {'macId': 'macId01'}, '_links': {'self': {'href': '/wai/v1/subscriptions/1'}}}</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${assocStaSub['_links']['self']['href']}</arg>
<arg>${HREF}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${assocStaSub['_links']['self']['href']}</arg>
<arg>${HREF}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210506 14:56:12.133" endtime="20210506 14:56:12.134"/>
</kw>
<msg timestamp="20210506 14:56:12.135" level="INFO">${passed} = True</msg>
<status status="PASS" starttime="20210506 14:56:12.133" endtime="20210506 14:56:12.135"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${passed}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20210506 14:56:12.135" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20210506 14:56:12.135" endtime="20210506 14:56:12.135"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.133" endtime="20210506 14:56:12.135"/>
</iter>
<status status="PASS" starttime="20210506 14:56:12.132" endtime="20210506 14:56:12.135"/>
</for>
<doc>Check that the IUT responds with the requested list of subscription
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.1
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:12.110" endtime="20210506 14:56:12.135"/>
</test>
<test id="s1-t5" name="TP_MEC_MEC028_SRV_WAI_006_OK">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.136" endtime="20210506 14:56:12.137"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.137" endtime="20210506 14:56:12.137"/>
</kw>
<kw name="Retrieve the subscription information">
<arg>${SUB_FILTER}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.137" endtime="20210506 14:56:12.138"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.138" endtime="20210506 14:56:12.138"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.138" endtime="20210506 14:56:12.138"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.139" endtime="20210506 14:56:12.139"/>
</kw>
<kw name="GET" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions?subscription_type=${subscription_type}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20210506 14:56:12.139" endtime="20210506 14:56:12.145"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.146" level="INFO">
{
    "seconds": 0.004893,
    "status": 200,
    "body": {
        "_links": {
            "self": {
                "href": "/wai/v1/subscriptions/1"
            }
        },
        "staDataRateSubscription": [],
        "assocStaSubscription": [
            {
                "subscriptionType": "AssocStaSubscription",
                "callbackReference": "http://callback/uri",
                "apId": {
                    "macId": "macId01"
                },
                "_links": {
                    "self": {
                        "href": "/wai/v1/subscriptions/1"
                    }
                }
            }
        ]
    },
    "headers": {
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "361",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.147" level="INFO">${output} = {'seconds': 0.004893, 'status': 200, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'staDataRateSubscription': [], 'assocStaSubscription': [{'subscriptionType': 'AssocStaSubscriptio...</msg>
<status status="PASS" starttime="20210506 14:56:12.146" endtime="20210506 14:56:12.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.147" level="INFO">${response} = {'seconds': 0.004893, 'status': 200, 'body': {'_links': {'self': {'href': '/wai/v1/subscriptions/1'}}, 'staDataRateSubscription': [], 'assocStaSubscription': [{'subscriptionType': 'AssocStaSubscriptio...</msg>
<status status="PASS" starttime="20210506 14:56:12.147" endtime="20210506 14:56:12.147"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.137" endtime="20210506 14:56:12.147"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>200</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.148" level="INFO">${status} = 200</msg>
<status status="PASS" starttime="20210506 14:56:12.148" endtime="20210506 14:56:12.148"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.148" endtime="20210506 14:56:12.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.149" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.149" endtime="20210506 14:56:12.149"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.148" endtime="20210506 14:56:12.150"/>
</kw>
<kw name="Check HTTP Response Body Json Schema Is" library="GenericKeywords">
<arg>SubscriptionLinkList</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response['headers']['Content-Type']}</arg>
<arg>application/json</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210506 14:56:12.150" endtime="20210506 14:56:12.151"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${schema}</var>
<arg>SEPARATOR=</arg>
<arg>${input}</arg>
<arg>.schema.json</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210506 14:56:12.151" level="INFO">${schema} = SubscriptionLinkList.schema.json</msg>
<status status="PASS" starttime="20210506 14:56:12.151" endtime="20210506 14:56:12.151"/>
</kw>
<kw name="Validate Json" library="JSONSchemaLibrary">
<arg>${schema}</arg>
<arg>${response['body']}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" starttime="20210506 14:56:12.151" endtime="20210506 14:56:12.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Json Schema Validation OK</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.157" level="INFO">Json Schema Validation OK</msg>
<status status="PASS" starttime="20210506 14:56:12.157" endtime="20210506 14:56:12.157"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.150" endtime="20210506 14:56:12.157"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response['body']['_links']['self']['href']}</arg>
<arg>${HREF}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210506 14:56:12.157" endtime="20210506 14:56:12.158"/>
</kw>
<doc>Check that the IUT responds with the requested list of subscription
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.1
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:12.135" endtime="20210506 14:56:12.158"/>
</test>
<test id="s1-t6" name="TP_MEC_MEC028_SRV_WAI_006_BR">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.159" endtime="20210506 14:56:12.160"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.160" endtime="20210506 14:56:12.160"/>
</kw>
<kw name="Retrieve the subscription information">
<arg>${INVALID_SUB_FILTER}</arg>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.160" endtime="20210506 14:56:12.161"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.161" endtime="20210506 14:56:12.161"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.161" endtime="20210506 14:56:12.162"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.162" endtime="20210506 14:56:12.162"/>
</kw>
<kw name="GET" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions?subscription_type=${subscription_type}</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<status status="PASS" starttime="20210506 14:56:12.162" endtime="20210506 14:56:12.170"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.170" level="INFO">
{
    "seconds": 0.005156,
    "status": 400,
    "body": "",
    "headers": {
        "Content-Type": "application/problem+json; charset=utf-8",
        "Content-Length": "0",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.170" level="INFO">${output} = {'seconds': 0.005156, 'status': 400, 'body': '', 'headers': {'Content-Type': 'application/problem+json; charset=utf-8', 'Content-Length': '0', 'Date': 'Thu, 06 May 2021 12:56:12 GMT', 'Connection': 'k...</msg>
<status status="PASS" starttime="20210506 14:56:12.170" endtime="20210506 14:56:12.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.171" level="INFO">${response} = {'seconds': 0.005156, 'status': 400, 'body': '', 'headers': {'Content-Type': 'application/problem+json; charset=utf-8', 'Content-Length': '0', 'Date': 'Thu, 06 May 2021 12:56:12 GMT', 'Connection': 'k...</msg>
<status status="PASS" starttime="20210506 14:56:12.171" endtime="20210506 14:56:12.171"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.160" endtime="20210506 14:56:12.171"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>400</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.172" level="INFO">${status} = 400</msg>
<status status="PASS" starttime="20210506 14:56:12.172" endtime="20210506 14:56:12.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.172" endtime="20210506 14:56:12.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.173" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.173" endtime="20210506 14:56:12.173"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.171" endtime="20210506 14:56:12.173"/>
</kw>
<doc>Check that the IUT responds with the requested list of subscription
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.1
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:12.159" endtime="20210506 14:56:12.173"/>
</test>
<test id="s1-t7" name="TP_MEC_MEC028_SRV_WAI_006_NF">
<kw name="Retrieve the subscription information using wrong endpoint">
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_MEC_SYSTEM} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.175" endtime="20210506 14:56:12.175"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${PIC_SERVICES} == 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20210506 14:56:12.175" endtime="20210506 14:56:12.176"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Content-Type":"application/json"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.176" endtime="20210506 14:56:12.177"/>
</kw>
<kw name="Set Headers" library="REST">
<arg>{"Authorization":"${TOKEN}"}</arg>
<tag>settings</tag>
<doc>*Sets new request headers or updates the existing.*</doc>
<status status="PASS" starttime="20210506 14:56:12.177" endtime="20210506 14:56:12.177"/>
</kw>
<kw name="GET" library="REST">
<arg>${apiRoot}/${apiName}/${apiVersion}/subscriptions_INVALID_URI</arg>
<tag>http</tag>
<doc>*Sends a GET request to the endpoint.*</doc>
<msg timestamp="20210506 14:56:12.183" level="WARN">Response body content is not JSON. Content-Type is: text/html; charset=utf-8</msg>
<status status="PASS" starttime="20210506 14:56:12.178" endtime="20210506 14:56:12.183"/>
</kw>
<kw name="Output" library="REST">
<var>${output}</var>
<arg>response</arg>
<tag>I/O</tag>
<doc>*Outputs JSON to terminal or a file.*</doc>
<msg timestamp="20210506 14:56:12.184" level="INFO">
{
    "seconds": 0.003614,
    "status": 404,
    "body": "&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"utf-8\"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot GET /wai/v1/subscriptions_INVALID_URI&lt;/pre&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n",
    "headers": {
        "Content-Security-Policy": "default-src 'none'",
        "X-Content-Type-Options": "nosniff",
        "Content-Type": "text/html; charset=utf-8",
        "Content-Length": "171",
        "Date": "Thu, 06 May 2021 12:56:12 GMT",
        "Connection": "keep-alive",
        "Keep-Alive": "timeout=5"
    }
}</msg>
<msg timestamp="20210506 14:56:12.184" level="INFO">${output} = {'seconds': 0.003614, 'status': 404, 'body': '&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;meta charset="utf-8"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot GET /wai/v1/subscriptions_INVALID_UR...</msg>
<status status="PASS" starttime="20210506 14:56:12.184" endtime="20210506 14:56:12.184"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${response}</arg>
<arg>${output}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210506 14:56:12.185" level="INFO">${response} = {'seconds': 0.003614, 'status': 404, 'body': '&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;meta charset="utf-8"&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot GET /wai/v1/subscriptions_INVALID_UR...</msg>
<status status="PASS" starttime="20210506 14:56:12.185" endtime="20210506 14:56:12.185"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.174" endtime="20210506 14:56:12.185"/>
</kw>
<kw name="Check HTTP Response Status Code Is" library="GenericKeywords">
<arg>404</arg>
<kw name="Convert To Integer" library="BuiltIn">
<var>${status}</var>
<arg>${expected_status}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20210506 14:56:12.186" level="INFO">${status} = 404</msg>
<status status="PASS" starttime="20210506 14:56:12.186" endtime="20210506 14:56:12.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${response['status']}</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210506 14:56:12.186" endtime="20210506 14:56:12.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Status code validated</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 14:56:12.187" level="INFO">Status code validated</msg>
<status status="PASS" starttime="20210506 14:56:12.187" endtime="20210506 14:56:12.187"/>
</kw>
<status status="PASS" starttime="20210506 14:56:12.186" endtime="20210506 14:56:12.188"/>
</kw>
<doc>Check that the IUT responds with an error when a request with not existing parameters is sent
Reference "ETSI GS MEC 028 2.1.1, clause 7.5.3.1
https://forge.etsi.org/rep/mec/gs028-wai-api/blob/v2.1.1/WlanInformationApi.yaml#/schemas/AssocStaSubscription</doc>
<status status="PASS" starttime="20210506 14:56:12.174" endtime="20210506 14:56:12.188"/>
</test>
<status status="PASS" starttime="20210506 14:56:11.587" endtime="20210506 14:56:12.188"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="WaiSubscription">WaiSubscription</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210506 14:56:12.106" level="WARN">Response body content is not JSON. Content-Type is: text/html; charset=utf-8</msg>
<msg timestamp="20210506 14:56:12.183" level="WARN">Response body content is not JSON. Content-Type is: text/html; charset=utf-8</msg>
</errors>
</robot>
